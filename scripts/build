#!/usr/bin/env bash
set -euo pipefail

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
BOLD='\033[1m'
NC='\033[0m' # No Color

# Build output directory
BIN_DIR="bin"

echo -e "${BLUE}${BOLD}Building nanostore...${NC}"
echo

# Clean and create build directories
echo -e "${BLUE}Setting up build directories...${NC}"
rm -rf "${BIN_DIR}"
mkdir -p "${BIN_DIR}"
echo -e "${GREEN}✓ Build directories ready${NC}"
echo

# Get version information from git
VERSION=$(git describe --tags --always --dirty 2>/dev/null || echo "dev")
COMMIT=$(git rev-parse --short HEAD 2>/dev/null || echo "unknown")
BUILD_DATE=$(date -u '+%Y-%m-%d_%H:%M:%S')

# Show build information
echo -e "${BLUE}Build Information:${NC}"
echo -e "  Version: ${BOLD}$VERSION${NC}"
echo -e "  Commit:  ${BOLD}$COMMIT${NC}"
echo -e "  Date:    ${BOLD}$BUILD_DATE${NC}"
echo

# Build nano-db CLI binary
echo -e "${BLUE}Building nano-db CLI...${NC}"
LDFLAGS="-X main.version=${VERSION} -X main.commit=${COMMIT} -X main.buildDate=${BUILD_DATE}"
if go build -ldflags "${LDFLAGS}" -o "${BIN_DIR}/nano-db" ./nanostore/cmd; then
    echo -e "${GREEN}✓ nano-db CLI built successfully${NC}"
    chmod +x "${BIN_DIR}/nano-db"
else
    echo -e "${RED}∅ nano-db CLI build failed${NC}"
    exit 1
fi

# Run tests if not skipped
if [[ "${SKIP_TESTS:-}" != "true" ]]; then
    echo
    echo -e "${YELLOW}Running tests...${NC}"
    TEST_CMD="go test ./... -short"
    if [ -f "vendor/modules.txt" ]; then
        TEST_CMD="go test -mod=vendor ./... -short"
    fi
    if $TEST_CMD; then
        echo -e "${GREEN}✓ All tests passed${NC}"
    else
        echo -e "${RED}∅ Tests failed${NC}"
        exit 1
    fi
else
    echo
    echo -e "${YELLOW}[!] Tests skipped (SKIP_TESTS=true)${NC}"
fi

echo
echo -e "${GREEN}${BOLD}Build completed successfully!${NC}"
echo -e "${BLUE}Build artifacts in: ${BOLD}${BIN_DIR}/${NC}"
ls -la "${BIN_DIR}/"